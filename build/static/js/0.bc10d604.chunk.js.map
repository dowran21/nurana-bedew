{"version":3,"sources":["components/ModalContainer.js"],"names":["Modal","lazy","ModalContainer","Button","children","title","size","useState","show","setShow","setClose","useEffect","cloneElement"],"mappings":"+IAGMA,EAAQC,gBAAK,kBAAM,kCAgCVC,UA9Bf,YAAyD,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,MAAOC,EAAM,EAANA,KAC9C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAW,WACbD,GAASD,IAOb,OALAG,qBAAU,WACN,OAAO,WACHF,GAAQ,MAEb,IAEC,qCACKN,EAAOO,GACPF,GACG,cAACR,EAAD,CAAOK,MAAOA,EAAOK,SAAUA,EAAUJ,KAAMA,EAA/C,SACKM,uBAAaR,EAAU,CAACM","file":"static/js/0.bc10d604.chunk.js","sourcesContent":["import {useState, useEffect, cloneElement, lazy } from 'react';\r\nimport {element, func, string} from 'prop-types';\r\n\r\nconst Modal = lazy(() => import('./Modal'));\r\n\r\nfunction ModalContainer({Button, children, title, size}){\r\n    const [show, setShow] = useState(false);\r\n\r\n    const setClose = () => {\r\n        setShow(!show);\r\n    };\r\n    useEffect(() => {\r\n        return () => {\r\n            setShow(false);\r\n        }\r\n    }, []);\r\n    return(\r\n        <>  \r\n            {Button(setClose)}\r\n            {show && \r\n                <Modal title={title} setClose={setClose} size={size}>\r\n                    {cloneElement(children, {setClose})}\r\n                </Modal>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nModalContainer.propTypes = {\r\n    children:element.isRequired,\r\n    title:string.isRequired,\r\n    size:string.isRequired,\r\n    Button:func.isRequired,\r\n}\r\n\r\nexport default ModalContainer"],"sourceRoot":""}